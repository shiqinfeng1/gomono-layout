// Copyright 2024 slw 150627601@qq.com . All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file.

// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package server

import (
	"context"

	"github.com/go-kratos/kratos/v2"

	"github.com/shiqinfeng1/gomono-layout/internal/srv-grpc-demo/adapters"
	"github.com/shiqinfeng1/gomono-layout/internal/srv-grpc-demo/application"
	"github.com/shiqinfeng1/gomono-layout/internal/srv-grpc-demo/server/grpc"
	"github.com/shiqinfeng1/gomono-layout/pkg/registrar"
	"github.com/shiqinfeng1/gomono-layout/pkg/trace"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireSrv(ctx context.Context, srvInfo *trace.SrvInfo) (*kratos.App, func(), error) {
	v := registrar.ProvideNacosRegistrarEndpoints(ctx)
	registryRegistrar := registrar.MustNacosRegistrar(v)
	repository := adapters.NewTrainingRepo()
	trainerGrpc := adapters.NewTrainerGrpc(v)
	userGrpc := adapters.NewUserGrpc(v)
	applicationApplication := application.NewApplication(repository, trainerGrpc, userGrpc)
	grpcService := grpc.NewGrpcService(applicationApplication)
	server := grpc.NewGRPCServer(ctx, srvInfo, grpcService)
	app := grpc.NewSrv(ctx, registryRegistrar, server)
	return app, func() {
	}, nil
}
